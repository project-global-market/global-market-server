generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  email      String?   @unique
  username   String
  verified   Boolean?
  from       String
  hash       String
  hashedRt   String?
  role       RoleValue @default(User)

  @@map("users")
}

model Category {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  title       String
  description String?
  isActive    Boolean       @default(true)
  subCategory SubCategory[]
  Item        Item[]

  @@map("categories")
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  description String?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  item        Item[]

  @@map("sub-categories")
}

model Item {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  title         String
  description   String?
  price         Int
  image         String?
  category      Category?    @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?
  orders        OrderItem[]

  @@map("items")
}

model Order {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  title         String
  comment       String?
  status        OrderStatus  @default(Pending)
  items         OrderItem[]

  @@map("orders")
}

model OrderItem {
    order       Order   @relation(fields: [orderId], references: [id])
    orderId     Int
    item        Item    @relation(fields: [itemId], references: [id])
    itemId      Int
    assignedAt  DateTime @default(now())
    count       Int

    @@id([orderId, itemId])
    @@map("order-items")
}

enum RoleValue {
  SuperAdmin
  Admin
  Moderator
  User
}

enum OrderStatus {
  Pending
  Paid
  Canceled
}